// <auto-generated />
using System;
using BlazorWebAssemblySignalRApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorWebAssemblySignalRApp.Server.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Dialogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name_dialogs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time_creation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dialogs");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Friends", b =>
                {
                    b.Property<int>("Id_friends")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_friends"), 1L, 1);

                    b.Property<DateTime>("time_creation")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id_friends");

                    b.HasIndex("user_id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Massages", b =>
                {
                    b.Property<int>("Id_massages")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_massages"), 1L, 1);

                    b.Property<int>("dialog_id")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("text_changed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("time_creation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_massages");

                    b.HasIndex("dialog_id");

                    b.ToTable("Massages");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.MassageToPhotos", b =>
                {
                    b.Property<int>("photo_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("photo_id"), 1L, 1);

                    b.Property<int>("massage_id")
                        .HasColumnType("int");

                    b.HasKey("photo_id");

                    b.HasIndex("massage_id");

                    b.ToTable("MassageToPhotos");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Photo", b =>
                {
                    b.Property<int>("Photo_id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time_creation")
                        .HasColumnType("datetime2");

                    b.HasKey("Photo_id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Role", b =>
                {
                    b.Property<int>("Id_roles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_roles"), 1L, 1);

                    b.Property<int>("Id_dialogs")
                        .HasColumnType("int");

                    b.Property<bool>("role")
                        .HasColumnType("bit");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id_roles");

                    b.HasIndex("Id_dialogs");

                    b.HasIndex("user_id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.User", b =>
                {
                    b.Property<int>("Id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_user"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time_creation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_user");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.UserToDialogs", b =>
                {
                    b.Property<int>("Id_user_to_dialogs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_user_to_dialogs"), 1L, 1);

                    b.Property<int>("dialogs_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("time_creation")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id_user_to_dialogs");

                    b.HasIndex("dialogs_id");

                    b.HasIndex("user_id");

                    b.ToTable("UserToDialogs");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Friends", b =>
                {
                    b.HasOne("BlazorWebAssemblySignalRApp.Models.User", "User")
                        .WithMany("friends")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Massages", b =>
                {
                    b.HasOne("BlazorWebAssemblySignalRApp.Models.Dialogs", "Dialogs")
                        .WithMany("massages")
                        .HasForeignKey("dialog_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dialogs");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.MassageToPhotos", b =>
                {
                    b.HasOne("BlazorWebAssemblySignalRApp.Models.Massages", "Massages")
                        .WithMany("massageToPhotos")
                        .HasForeignKey("massage_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Massages");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Photo", b =>
                {
                    b.HasOne("BlazorWebAssemblySignalRApp.Models.MassageToPhotos", "massageToPhotos")
                        .WithMany("Photos")
                        .HasForeignKey("Photo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("massageToPhotos");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Role", b =>
                {
                    b.HasOne("BlazorWebAssemblySignalRApp.Models.Dialogs", "Dialogs")
                        .WithMany("roles")
                        .HasForeignKey("Id_dialogs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorWebAssemblySignalRApp.Models.User", "User")
                        .WithMany("roles")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dialogs");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.UserToDialogs", b =>
                {
                    b.HasOne("BlazorWebAssemblySignalRApp.Models.Dialogs", "Dialogs")
                        .WithMany("usersToDialogs")
                        .HasForeignKey("dialogs_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorWebAssemblySignalRApp.Models.User", "User")
                        .WithMany("usersToDialogs")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dialogs");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Dialogs", b =>
                {
                    b.Navigation("massages");

                    b.Navigation("roles");

                    b.Navigation("usersToDialogs");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.Massages", b =>
                {
                    b.Navigation("massageToPhotos");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.MassageToPhotos", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("BlazorWebAssemblySignalRApp.Models.User", b =>
                {
                    b.Navigation("friends");

                    b.Navigation("roles");

                    b.Navigation("usersToDialogs");
                });
#pragma warning restore 612, 618
        }
    }
}
